{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/persons.js","components/Notification.js","components/App.js","index.js"],"names":["Filter","filterName","handleFilterChange","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Person","person","onDelete","name","number","onClick","id","Persons","persons","filter","toLowerCase","includes","map","p","key","baseUrl","axios","get","then","response","data","newPerson","post","put","delete","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","notificationMsg","setNotificationMsg","notificationType","setNotificationType","useEffect","personService","console","log","showNotification","msg","setTimeout","event","target","preventDefault","existingPerson","find","undefined","window","alert","confirm","catch","error","concat","_","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a5b1523.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({filterName, handleFilterChange}) =>\r\n    <div>filter shown with\r\n        <input value={filterName} onChange={handleFilterChange}/>\r\n    </div>\r\n\r\nexport default Filter\r\n","import React from \"react\";\r\n\r\nconst PersonForm = ({\r\n                  addPerson,\r\n                  newName, handleNameChange,\r\n                  newNumber, handleNumberChange\r\n              }) => {\r\n    return <form onSubmit={addPerson}>\r\n        <div>\r\n            name: <input value={newName} onChange={handleNameChange}/>\r\n        </div>\r\n        <div>number: <input value={newNumber} onChange={handleNumberChange}/></div>\r\n        <div>\r\n            <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport default PersonForm\r\n\r\n\r\n","import React from \"react\";\r\n\r\nconst Person = ({person, onDelete}) => <li>\r\n    {person.name} {person.number}\r\n    <button onClick={() => onDelete(person.id, person.name)}>delete</button>\r\n</li>\r\n\r\nexport default Person\r\n","import React from \"react\";\r\nimport Person from \"./Person\";\r\n\r\nconst Persons = ({filterName, persons, onDelete}) => {\r\n\r\n    return <ul>{\r\n        persons\r\n            .filter(person => person.name.toLowerCase().includes(filterName.toLowerCase()))\r\n            .map(p =>\r\n                <Person key={p.id}\r\n                        person={p}\r\n                        onDelete={onDelete}/>)\r\n    }</ul>\r\n}\r\n\r\nexport default Persons\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, remove}\r\n","import React from \"react\";\r\n\r\nconst Notification = ({message, type}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    switch (type) {\r\n        case 'error':\r\n            return <div className=\"error\">{message}</div>\r\n        case 'success':\r\n            return <div className=\"success\">{message}</div>\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nexport default Notification\r\n","import React, {useState, useEffect} from 'react'\r\nimport Filter from \"./Filter\";\r\nimport PersonForm from \"./PersonForm\";\r\nimport Persons from \"./Persons\";\r\nimport personService from '../services/persons'\r\nimport Notification from \"./Notification\";\r\n\r\nconst SUCCESS = 'success'\r\nconst ERROR = 'error'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [filterName, setFilter] = useState('')\r\n    const [notificationMsg, setNotificationMsg] = useState(null)\r\n    const [notificationType, setNotificationType] = useState(null)\r\n\r\n    useEffect(() => {\r\n        personService\r\n            .getAll()\r\n            .then(persons => {\r\n                console.log(`retrieved persons: ${persons}`)\r\n                setPersons(persons);\r\n            })\r\n    }, [])\r\n\r\n    const handleNameChange = (event) => {\r\n        // console.log(event.target.value)\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        // console.log(event.target.value)\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleFilterChange = (event) => {\r\n        // console.log(event.target.value)\r\n        setFilter(event.target.value)\r\n    }\r\n\r\n    const showNotification = (msg, type) => {\r\n        setNotificationMsg(msg)\r\n        setNotificationType(type)\r\n        console.log(notificationType)\r\n        setTimeout(() => {\r\n            setNotificationMsg(null)\r\n            setNotificationType(null)\r\n        }, 5000)\r\n    }\r\n\r\n    const deletePerson = (id, name) => {\r\n        const r = window.confirm(`Are you sure that you want to delete ${name}?`)\r\n\r\n        if (r === true) {\r\n            personService\r\n                .remove(id)\r\n                .then(_ => {\r\n                    console.log(`removed person with id ${id}`)\r\n                    setPersons(persons.filter(person => person.id !== id))\r\n                    showNotification(`Deleted ${name}`, SUCCESS)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    showNotification(`Error removing ${name} from the phonebook`, ERROR)\r\n                })\r\n        }\r\n    }\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n\r\n        // Prevent action if fields are empty\r\n        if (newName === '' || newNumber === '') {\r\n            alert('Fields cannot be empty, please enter valid information')\r\n            return\r\n        }\r\n\r\n        const newPerson = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n\r\n        // Search database for existing person\r\n        const existingPerson = persons.find(person => person.name === newPerson.name)\r\n\r\n        // Person does exist in database\r\n        if (existingPerson !== undefined) {\r\n\r\n            if (existingPerson.number === newPerson.number) {\r\n                // Person has same name and same number, do nothing\r\n                window.alert(`${newPerson.name} is already added to phonebook.`)\r\n            } else {\r\n                // Person has same name and different number, prompt for change\r\n                const r = window.confirm(`${newPerson.name} is already added to phonebook, \r\n                would you like to replace the existing number?`)\r\n                if (r === true) {\r\n                    personService\r\n                        .update(existingPerson.id, newPerson)\r\n                        .then(data => {\r\n                            setPersons(persons.map(p => p.id !== existingPerson.id ? p : data))\r\n                            showNotification(`Updated ${newName}`, SUCCESS)\r\n                        })\r\n                        .catch(error => showNotification(error.response.data.error, ERROR))\r\n                }\r\n            }\r\n        } else {\r\n            // Person doesn't already exist in database\r\n            personService\r\n                .create(newPerson)\r\n                .then(newPerson => {\r\n                    console.log(`new person added: ${newPerson}`)\r\n                    setPersons(persons.concat(newPerson))\r\n                    showNotification(`Added ${newName}`, SUCCESS)\r\n                })\r\n                .catch(error => showNotification(error.response.data.error, ERROR))\r\n        }\r\n        setNewName('')\r\n        setNewNumber('')\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={notificationMsg} type={notificationType}/>\r\n            <Filter filterName={filterName} handleFilterChange={handleFilterChange}/>\r\n            <h2>add a new Person</h2>\r\n            <PersonForm addPerson={addPerson}\r\n                        newName={newName} handleNameChange={handleNameChange}\r\n                        newNumber={newNumber} handleNumberChange={handleNumberChange}\r\n            />\r\n            <h2>Numbers</h2>\r\n            <Persons filterName={filterName} persons={persons} onDelete={deletePerson}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./components/App\";\n\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}